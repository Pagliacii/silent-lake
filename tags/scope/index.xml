<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>scope on ୧ʕ •ᴥ•ʔ୨ Silent Lake</title><link>https://pagliacii.github.io/silent-lake/tags/scope/</link><description>Recent content in scope on ୧ʕ •ᴥ•ʔ୨ Silent Lake</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>Jason Huang © 2023</copyright><lastBuildDate>Sun, 15 Oct 2023 23:29:26 +0800</lastBuildDate><atom:link href="https://pagliacii.github.io/silent-lake/tags/scope/index.xml" rel="self" type="application/rss+xml"/><item><title>Python 列表推导式里变量未定义的问题</title><link>https://pagliacii.github.io/silent-lake/blog/a-python-list-comprehensions-scope-problem/</link><pubDate>Sun, 15 Oct 2023 23:29:26 +0800</pubDate><guid>https://pagliacii.github.io/silent-lake/blog/a-python-list-comprehensions-scope-problem/</guid><description>之前在捕蛇者说的听众群里有人问了下面这个问题：
为什么 eval('''exec(&amp;quot;d={};[d for i in range(1)]&amp;quot;)''',{},{}) 会报错 NameError 而 eval('''exec(&amp;quot;d={};[d for i in range(1)]&amp;quot;,None,{})''') 和 eval('''exec(&amp;quot;d={};[d]&amp;quot;,None,{})''') 都不会报错？
挺有趣的，为什么在有 d={} 的情况下还会出现 NameError 呢？下面就来分析看看。
ℹ️ INFO 使用的 Python 版本为 3.11.2 TL;DR exec 在执行 Python 语句时有自己的局部作用域，同时列表推导式也有自己的局部作用域。在全局作用域里没有 d 这个变量的情况下，列表推导式并不能够获取到 exec 执行时的局部作用域里的 d。
简化问题 首先可以把这个问题拆分成以下三个部分：
最外层的 eval 函数的作用。 中间的 exec 函数的作用。 最里层的列表推导式。 eval 函数 在 repl 里输入 help(eval) 可以得到下面的这段输出：
eval(source, globals=None, locals=None, /) Evaluate the given source in the context of globals and locals. The source may be a string representing a Python expression or a code object as returned by compile().</description></item></channel></rss>