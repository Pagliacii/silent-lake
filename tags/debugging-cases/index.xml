<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Debugging Cases on ୧ʕ •ᴥ•ʔ୨ Silent Lake</title><link>https://pagliacii.github.io/silent-lake/tags/debugging-cases/</link><description>Recent content in Debugging Cases on ୧ʕ •ᴥ•ʔ୨ Silent Lake</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>[Jason Huang](https://github.com/Pagliacii) © 2023</copyright><lastBuildDate>Thu, 07 Dec 2023 22:38:40 +0800</lastBuildDate><atom:link href="https://pagliacii.github.io/silent-lake/tags/debugging-cases/index.xml" rel="self" type="application/rss+xml"/><item><title>Python 之“无法访问”的属性</title><link>https://pagliacii.github.io/silent-lake/blog/debugging-cases-python-inaccessible-attribute/</link><pubDate>Thu, 07 Dec 2023 22:38:40 +0800</pubDate><guid>https://pagliacii.github.io/silent-lake/blog/debugging-cases-python-inaccessible-attribute/</guid><description>最近碰到一个 Python 中的奇怪现象：明明在类定义里有着一个属性，但是在实例化后的对象上却无法访问到它，会抛出 AttributeError。
虽然 root cause 很简单，但是我觉得这个案例可以作为 debug 的例子，于是就有了这篇文章。</description><content:encoded><![CDATA[<p>最近碰到一个 Python 中的奇怪现象：明明在类定义里有着一个属性，但是在实例化后的对象上却无法访问到它，会抛出 <code>AttributeError</code>。</p>
<p>虽然 root cause 很简单，但是我觉得这个案例可以作为 debug 的例子，于是就有了这篇文章。</p>
<h2 id="示例代码">示例代码</h2>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="k">class</span> <span class="nc">Parent</span><span class="p">:</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">    <span class="n">_fields</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    <span class="k">def</span> <span class="fm">__getattr__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">        <span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fields</span><span class="p">[</span><span class="n">name</span><span class="p">]</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">        <span class="k">except</span> <span class="ne">KeyError</span><span class="p">:</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">            <span class="k">raise</span> <span class="ne">AttributeError</span><span class="p">(</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">                <span class="sa">f</span><span class="s2">&#34;&#39;</span><span class="si">{</span><span class="bp">self</span><span class="o">.</span><span class="vm">__class__</span><span class="o">.</span><span class="vm">__name__</span><span class="si">}</span><span class="s2">&#39; object has no attribute &#39;</span><span class="si">{</span><span class="n">name</span><span class="si">}</span><span class="s2">&#39;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">            <span class="p">)</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">
</span></span><span class="line"><span class="ln">12</span><span class="cl">
</span></span><span class="line"><span class="ln">13</span><span class="cl"><span class="k">class</span> <span class="nc">Unrelated</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl">    <span class="nd">@property</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl">    <span class="k">def</span> <span class="nf">name</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="ln">16</span><span class="cl">        <span class="k">return</span> <span class="s2">&#34;Unrelated&#34;</span>
</span></span><span class="line"><span class="ln">17</span><span class="cl">
</span></span><span class="line"><span class="ln">18</span><span class="cl">
</span></span><span class="line"><span class="ln">19</span><span class="cl"><span class="k">class</span> <span class="nc">Child</span><span class="p">(</span><span class="n">Unrelated</span><span class="p">,</span> <span class="n">Parent</span><span class="p">):</span>
</span></span><span class="line"><span class="ln">20</span><span class="cl">    <span class="nd">@property</span>
</span></span><span class="line"><span class="ln">21</span><span class="cl">    <span class="k">def</span> <span class="nf">name</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="ln">22</span><span class="cl">        <span class="c1"># access some variable in other module</span>
</span></span><span class="line"><span class="ln">23</span><span class="cl">        <span class="k">return</span> <span class="n">OtherModule</span><span class="o">.</span><span class="n">name</span>
</span></span><span class="line"><span class="ln">24</span><span class="cl">
</span></span><span class="line"><span class="ln">25</span><span class="cl">
</span></span><span class="line"><span class="ln">26</span><span class="cl"><span class="n">child</span> <span class="o">=</span> <span class="n">Child</span><span class="p">()</span>
</span></span><span class="line"><span class="ln">27</span><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;name&#34;</span> <span class="ow">in</span> <span class="nb">dir</span><span class="p">(</span><span class="n">child</span><span class="p">))</span> <span class="c1"># True</span>
</span></span><span class="line"><span class="ln">28</span><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">child</span><span class="o">.</span><span class="n">name</span><span class="p">)</span> <span class="c1"># AttributeError: &#39;Child&#39; object has no attribute &#39;name&#39;</span></span></span></code></pre></div><h2 id="问题描述">问题描述</h2>
<p>问题出现在访问 <code>Child</code> 实例属性 <code>name</code> 时。虽然 <code>&quot;name&quot; in dir(child)</code> 返回 <code>True</code>，表明属性 <code>name</code> 存在，但是直接访问 <code>child.name</code> 却抛出了 <code>AttributeError</code>。</p>
<p>这乍一看上去很奇怪，明明属性存在却无法访问，这是为什么呢？</p>
<h2 id="分析过程">分析过程</h2>
<p>要分析这个问题，首先我们需要对 Python 中属性查找的过程有一定了解。在 Python 中，当我们使用形如 <code>instance.attribute</code> 来访问实例属性时，会先在该实例对象上查找相应的属性，如果找不到就会抛出 <code>AttributeError</code>。而当我们给类加上了 <code>__getattr__</code> 方法时，Python 就会在找不到属性时调用这个<a href="https://docs.python.org/3/reference/datamodel.html#object.__getattr__">方法</a>。</p>
<blockquote>
<p><strong>object.__getattr__(self, name)</strong></p>
<p>Called when the default attribute access fails with an <a href="https://docs.python.org/3/library/exceptions.html#AttributeError"><code>AttributeError</code></a> (either <a href="https://docs.python.org/3/reference/datamodel.html#object.__getattribute__"><code>__getattribute__()</code></a> raises an <a href="https://docs.python.org/3/library/exceptions.html#AttributeError"><code>AttributeError</code></a> because name is not an instance attribute or an attribute in the class tree for <code>self</code>; or <a href="https://docs.python.org/3/reference/datamodel.html#object.__get__"><code>__get__()</code></a> of a name property raises <a href="https://docs.python.org/3/library/exceptions.html#AttributeError"><code>AttributeError</code></a>). This method should either return the (computed) attribute value or raise an <a href="https://docs.python.org/3/library/exceptions.html#AttributeError"><code>AttributeError</code></a> exception.</p>
</blockquote>
<p>当我们执行示例代码中的 <code>print(child.name)</code> 这一行时，会有以下 traceback 信息抛出：</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="ln"> 1</span><span class="cl">---------------------------------------------------------------------------
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">KeyError                                  Traceback (most recent call last)
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">Input In [2], in Parent.__getattr__(self, name)
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">      5 try:
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">----&gt; 6     return self._fields[name]
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">      7 except KeyError:
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">KeyError: &#39;name&#39;
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">
</span></span><span class="line"><span class="ln">10</span><span class="cl">During handling of the above exception, another exception occurred:
</span></span><span class="line"><span class="ln">11</span><span class="cl">
</span></span><span class="line"><span class="ln">12</span><span class="cl">AttributeError                            Traceback (most recent call last)
</span></span><span class="line"><span class="ln">13</span><span class="cl">Input In [4], in &lt;cell line: 0&gt;()
</span></span><span class="line"><span class="ln">14</span><span class="cl">----&gt; 1 c.name
</span></span><span class="line"><span class="ln">15</span><span class="cl">
</span></span><span class="line"><span class="ln">16</span><span class="cl">Input In [2], in Parent.__getattr__(self, name)
</span></span><span class="line"><span class="ln">17</span><span class="cl">      6     return self._fields[name]
</span></span><span class="line"><span class="ln">18</span><span class="cl">      7 except KeyError:
</span></span><span class="line"><span class="ln">19</span><span class="cl">----&gt; 8     raise AttributeError(
</span></span><span class="line"><span class="ln">20</span><span class="cl">      9         f&#34;&#39;{self.__class__.__name__}&#39; object has no attribute &#39;{name}&#39;&#34;,
</span></span><span class="line"><span class="ln">21</span><span class="cl">     10     )
</span></span><span class="line"><span class="ln">22</span><span class="cl">
</span></span><span class="line"><span class="ln">23</span><span class="cl">AttributeError: &#39;Child&#39; object has no attribute &#39;name&#39;
</span></span><span class="line"><span class="ln">24</span><span class="cl">&gt; &lt;ipython-input-2-b3781a93b20e&gt;(8)__getattr__()
</span></span><span class="line"><span class="ln">25</span><span class="cl">      6             return self._fields[name]
</span></span><span class="line"><span class="ln">26</span><span class="cl">      7         except KeyError:
</span></span><span class="line"><span class="ln">27</span><span class="cl">----&gt; 8             raise AttributeError(
</span></span><span class="line"><span class="ln">28</span><span class="cl">      9                 f&#34;&#39;{self.__class__.__name__}&#39; object has no attribute &#39;{name}&#39;&#34;,
</span></span><span class="line"><span class="ln">29</span><span class="cl">     10             )</span></span></code></pre></div><p>从 traceback 信息中可以看到，<code>child.name</code> 这一次属性访问调用了父类 <code>Parent</code> 的 <code>__getattr__</code> 方法。但是在子类 <code>Child</code> 的定义中，<code>name</code> 这个属性是明显存在的，它的值是 <code>OtherModule</code> 的 <code>name</code> 属性。由于 <code>__getattr__</code> 只有在属性访问抛出 <code>AttributeError</code> 时才会被调用，那么问题根源应该就是 <code>OtherModule.name</code> 抛出了 <code>AttributeError</code>，才会调用到 <code>__getattr__</code>。</p>
<p>事实上也是如此，<code>return OtherModule.name</code> 这一行抛出了 <code>AttributeError</code>，属性访问的行为 fallback 到了 <code>__getattr__</code>。</p>
<h2 id="调试方法">调试方法</h2>
<p>接下来说一下有什么方法可以用来调试这个问题。调试的目的就是为了弄清楚程序逻辑上有什么问题，通常来说有以下几种方法：</p>
<ol>
<li>打断点，使用 <a href="https://docs.python.org/3/library/pdb.html">pdb</a> 进行单步调试</li>
<li>加<a href="https://docs.python.org/3/howto/logging.html">日志</a>，使用二分法，找到错误的位置</li>
</ol>
<h3 id="打断点">打断点</h3>
<p>打断点就是在程序代码中插入 <code>breakpoint()</code>，当程序执行到这行代码时，程序就会停止运行，可以和当前内存中的数据进行交互，方便定位问题。如果是在 REPL 里，也可以通过 <code>import pdb; pdb.run('your code here')</code> 开始单步调试。</p>
<p>以 <a href="https://ipython.org/">IPython</a> 为例，进入 REPL 后执行以下代码来进入单步调试：</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="n">In</span> <span class="p">[</span><span class="mi">1</span><span class="p">]:</span> <span class="kn">import</span> <span class="nn">pdb</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl"><span class="n">In</span> <span class="p">[</span><span class="mi">2</span><span class="p">]:</span> <span class="k">class</span> <span class="nc">OtherModule</span><span class="p">:</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">   <span class="o">...</span><span class="p">:</span>     <span class="k">pass</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">   <span class="o">...</span><span class="p">:</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">   <span class="o">...</span><span class="p">:</span> <span class="c1"># Parent/Child class definitions</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">
</span></span><span class="line"><span class="ln"> 8</span><span class="cl"><span class="n">In</span> <span class="p">[</span><span class="mi">3</span><span class="p">]:</span> <span class="n">c</span> <span class="o">=</span> <span class="n">Child</span><span class="p">()</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">
</span></span><span class="line"><span class="ln">10</span><span class="cl"><span class="n">In</span> <span class="p">[</span><span class="mi">4</span><span class="p">]:</span> <span class="n">pdb</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="s1">&#39;c.name&#39;</span><span class="p">)</span>
</span></span><span class="line hl"><span class="ln">11</span><span class="cl"><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span><span class="p">()</span></span></span></code></pre></div><p>然后输入 <strong>s</strong> 回车来跳进 <code>&lt;module&gt;()</code> 里面，输入 <strong>n</strong> 回车来执行下一行，按 <strong>q</strong> 结束调试。</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="n">In</span> <span class="p">[</span><span class="mi">4</span><span class="p">]:</span> <span class="n">pdb</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="s1">&#39;c.name&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span><span class="p">()</span>
</span></span><span class="line hl"><span class="ln"> 3</span><span class="cl"><span class="p">(</span><span class="n">Pdb</span><span class="p">)</span> <span class="n">s</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl"><span class="o">--</span><span class="n">Call</span><span class="o">--</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl"><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">ipython</span><span class="o">-</span><span class="nb">input</span><span class="o">-</span><span class="mi">2</span><span class="o">-</span><span class="mi">20572</span><span class="n">dc1ce97</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">24</span><span class="p">)</span><span class="n">name</span><span class="p">()</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl"><span class="o">-&gt;</span> <span class="nd">@property</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl"><span class="p">(</span><span class="n">Pdb</span><span class="p">)</span> <span class="n">n</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl"><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">ipython</span><span class="o">-</span><span class="nb">input</span><span class="o">-</span><span class="mi">2</span><span class="o">-</span><span class="mi">20572</span><span class="n">dc1ce97</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">27</span><span class="p">)</span><span class="n">name</span><span class="p">()</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl"><span class="o">-&gt;</span> <span class="k">return</span> <span class="n">OtherModule</span><span class="o">.</span><span class="n">name</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl"><span class="p">(</span><span class="n">Pdb</span><span class="p">)</span> <span class="n">n</span>
</span></span><span class="line hl"><span class="ln">11</span><span class="cl"><span class="ne">AttributeError</span><span class="p">:</span> <span class="nb">type</span> <span class="nb">object</span> <span class="s1">&#39;OtherModule&#39;</span> <span class="n">has</span> <span class="n">no</span> <span class="n">attribute</span> <span class="s1">&#39;name&#39;</span>
</span></span><span class="line"><span class="ln">12</span><span class="cl"><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">ipython</span><span class="o">-</span><span class="nb">input</span><span class="o">-</span><span class="mi">2</span><span class="o">-</span><span class="mi">20572</span><span class="n">dc1ce97</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">27</span><span class="p">)</span><span class="n">name</span><span class="p">()</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl"><span class="o">-&gt;</span> <span class="k">return</span> <span class="n">OtherModule</span><span class="o">.</span><span class="n">name</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl"><span class="p">(</span><span class="n">Pdb</span><span class="p">)</span> <span class="n">n</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl"><span class="o">--</span><span class="n">Return</span><span class="o">--</span>
</span></span><span class="line"><span class="ln">16</span><span class="cl"><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">ipython</span><span class="o">-</span><span class="nb">input</span><span class="o">-</span><span class="mi">2</span><span class="o">-</span><span class="mi">20572</span><span class="n">dc1ce97</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">27</span><span class="p">)</span><span class="n">name</span><span class="p">()</span><span class="o">-&gt;</span><span class="kc">None</span>
</span></span><span class="line"><span class="ln">17</span><span class="cl"><span class="o">-&gt;</span> <span class="k">return</span> <span class="n">OtherModule</span><span class="o">.</span><span class="n">name</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl"><span class="p">(</span><span class="n">Pdb</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl"><span class="o">--</span><span class="n">Call</span><span class="o">--</span>
</span></span><span class="line"><span class="ln">20</span><span class="cl"><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">ipython</span><span class="o">-</span><span class="nb">input</span><span class="o">-</span><span class="mi">2</span><span class="o">-</span><span class="mi">20572</span><span class="n">dc1ce97</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span><span class="fm">__getattr__</span><span class="p">()</span>
</span></span><span class="line hl"><span class="ln">21</span><span class="cl"><span class="o">-&gt;</span> <span class="k">def</span> <span class="fm">__getattr__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
</span></span><span class="line"><span class="ln">22</span><span class="cl"><span class="p">(</span><span class="n">Pdb</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">23</span><span class="cl"><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">ipython</span><span class="o">-</span><span class="nb">input</span><span class="o">-</span><span class="mi">2</span><span class="o">-</span><span class="mi">20572</span><span class="n">dc1ce97</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="fm">__getattr__</span><span class="p">()</span>
</span></span><span class="line"><span class="ln">24</span><span class="cl"><span class="o">-&gt;</span> <span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">25</span><span class="cl"><span class="p">(</span><span class="n">Pdb</span><span class="p">)</span> <span class="n">q</span></span></span></code></pre></div><p>你也可以在上面第 11 行后输入 <code>p dir(OtherModule)</code> 来查看 <code>OtherModule</code> 对象的属性列表。</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="p">(</span><span class="n">Pdb</span><span class="p">)</span> <span class="n">n</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="ne">AttributeError</span><span class="p">:</span> <span class="nb">type</span> <span class="nb">object</span> <span class="s1">&#39;OtherModule&#39;</span> <span class="n">has</span> <span class="n">no</span> <span class="n">attribute</span> <span class="s1">&#39;name&#39;</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl"><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">ipython</span><span class="o">-</span><span class="nb">input</span><span class="o">-</span><span class="mi">2</span><span class="o">-</span><span class="mi">20572</span><span class="n">dc1ce97</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">27</span><span class="p">)</span><span class="n">name</span><span class="p">()</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl"><span class="o">-&gt;</span> <span class="k">return</span> <span class="n">OtherModule</span><span class="o">.</span><span class="n">name</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl"><span class="p">(</span><span class="n">Pdb</span><span class="p">)</span> <span class="n">p</span> <span class="nb">dir</span><span class="p">(</span><span class="n">OtherModule</span><span class="p">)</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl"><span class="p">[</span><span class="s1">&#39;__class__&#39;</span><span class="p">,</span> <span class="s1">&#39;__delattr__&#39;</span><span class="p">,</span> <span class="s1">&#39;__dict__&#39;</span><span class="p">,</span> <span class="s1">&#39;__dir__&#39;</span><span class="p">,</span> <span class="s1">&#39;__doc__&#39;</span><span class="p">,</span> <span class="s1">&#39;__eq__&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl"><span class="s1">&#39;__format__&#39;</span><span class="p">,</span> <span class="s1">&#39;__ge__&#39;</span><span class="p">,</span> <span class="s1">&#39;__getattribute__&#39;</span><span class="p">,</span> <span class="s1">&#39;__getstate__&#39;</span><span class="p">,</span> <span class="s1">&#39;__gt__&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl"><span class="s1">&#39;__hash__&#39;</span><span class="p">,</span> <span class="s1">&#39;__init__&#39;</span><span class="p">,</span> <span class="s1">&#39;__init_subclass__&#39;</span><span class="p">,</span> <span class="s1">&#39;__le__&#39;</span><span class="p">,</span> <span class="s1">&#39;__lt__&#39;</span><span class="p">,</span> <span class="s1">&#39;__module__&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl"><span class="s1">&#39;__ne__&#39;</span><span class="p">,</span> <span class="s1">&#39;__new__&#39;</span><span class="p">,</span> <span class="s1">&#39;__reduce__&#39;</span><span class="p">,</span> <span class="s1">&#39;__reduce_ex__&#39;</span><span class="p">,</span> <span class="s1">&#39;__repr__&#39;</span><span class="p">,</span> <span class="s1">&#39;__setattr__&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl"><span class="s1">&#39;__sizeof__&#39;</span><span class="p">,</span> <span class="s1">&#39;__str__&#39;</span><span class="p">,</span> <span class="s1">&#39;__subclasshook__&#39;</span><span class="p">,</span> <span class="s1">&#39;__weakref__&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl"><span class="p">(</span><span class="n">Pdb</span><span class="p">)</span></span></span></code></pre></div><h2 id="bonus">Bonus</h2>
<p>在 Python <a href="https://docs.python.org/3/reference/datamodel.html">Data Model</a> 文档里还有这样一个 <a href="https://docs.python.org/3/reference/datamodel.html#object.__getattribute__">magic method</a>: <code>__getattribute__</code>。它会在属性访问时无条件调用。</p>
<blockquote>
<p><strong>object.__getattribute__(self, name)</strong></p>
<p>Called unconditionally to implement attribute accesses for instances of the class.</p>
</blockquote>
<p>我们知道在 Python 里并没有事实上的私有变量，只有约定上的私有属性。其实借助 <code>__getattribute__</code> 方法，我们就可以把约定上的私有属性变为“事实上”的私有属性。</p>
<details>
    <summary style="color: var(--flexoki-light-blue)">Bonus</summary>
    




<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="k">class</span> <span class="nc">Base</span><span class="p">:</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">public_attr</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_private_attr</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    <span class="k">def</span> <span class="fm">__getattribute__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">        <span class="k">if</span> <span class="n">name</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s2">&#34;_&#34;</span><span class="p">)</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">name</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s2">&#34;__&#34;</span><span class="p">):</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">            <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span> <span class="ow">is</span> <span class="ow">not</span> <span class="n">Base</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">                <span class="k">raise</span> <span class="ne">AttributeError</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;Unaccessible private attribute: </span><span class="si">{</span><span class="n">name</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">        <span class="n">val</span> <span class="o">=</span> <span class="nb">super</span><span class="p">()</span><span class="o">.</span><span class="fm">__getattribute__</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">12</span><span class="cl">        <span class="k">if</span> <span class="n">name</span> <span class="o">==</span> <span class="s2">&#34;__dict__&#34;</span> <span class="ow">and</span> <span class="nb">type</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span> <span class="ow">is</span> <span class="ow">not</span> <span class="n">Base</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl">            <span class="n">val</span> <span class="o">=</span> <span class="p">{</span><span class="n">k</span><span class="p">:</span> <span class="n">v</span> <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">val</span><span class="o">.</span><span class="n">items</span><span class="p">()</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">k</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s2">&#34;_&#34;</span><span class="p">)}</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl">        <span class="k">return</span> <span class="n">val</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl">
</span></span><span class="line"><span class="ln">16</span><span class="cl">
</span></span><span class="line"><span class="ln">17</span><span class="cl"><span class="k">class</span> <span class="nc">Sub</span><span class="p">(</span><span class="n">Base</span><span class="p">):</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl">    <span class="k">pass</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl">
</span></span><span class="line"><span class="ln">20</span><span class="cl">
</span></span><span class="line"><span class="ln">21</span><span class="cl"><span class="n">b</span> <span class="o">=</span> <span class="n">Base</span><span class="p">()</span>
</span></span><span class="line"><span class="ln">22</span><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">b</span><span class="o">.</span><span class="n">public_attr</span><span class="p">)</span>    <span class="c1"># 0</span>
</span></span><span class="line"><span class="ln">23</span><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">b</span><span class="o">.</span><span class="n">_private_attr</span><span class="p">)</span>  <span class="c1"># 1</span>
</span></span><span class="line"><span class="ln">24</span><span class="cl"><span class="n">s</span> <span class="o">=</span> <span class="n">Sub</span><span class="p">()</span>
</span></span><span class="line"><span class="ln">25</span><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">public_attr</span><span class="p">)</span>    <span class="c1"># 0</span>
</span></span><span class="line"><span class="ln">26</span><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">_private_attr</span><span class="p">)</span>  <span class="c1"># AttributeError: Unaccessible private attribute: _private_attr</span></span></span></code></pre></div>
</details>]]></content:encoded></item></channel></rss>